query($owner: String!, $repo: String!, $prNumber: Int!) {
  repository(owner: $owner, name: $repo) {
    pullRequest(number: $prNumber) {
      additions
      assignees(first: 100) {
        nodes {
          id
          login
        }
      }
      author {
        login
      }
      autoMergeRequest {
        enabledBy {
          login
        }
      }
      baseRefName
      body
      changedFiles
      closed
      closedAt
      comments(first: 100) {
        nodes {
          id
          body
          createdAt
          author {
            login
          }
        }
      }
      commits(first: 250) {
        nodes {
          commit {
            oid
            additions
            deletions
            committedDate
            author {
              name
              email
            }
            statusCheckRollup {
              contexts(first: 100) {
                nodes {
                  __typename
                  ... on StatusContext {
                    id
                    context
                    state
                    targetUrl
                    description
                  }
                  ... on CheckRun {
                    id
                    name
                    conclusion
                    status
                    detailsUrl
                  }
                }
              }
            }
          }
        }
      }
      createdAt
      deletions
      files(first: 100) {
        nodes {
          path
          additions
          deletions
        }
      }
      headRefName
      headRefOid
      headRepository {
        name
        owner {
          login
        }
      }
      headRepositoryOwner {
        login
      }
      id
      isCrossRepository
      isDraft
      labels(first: 100) {
        nodes {
          id
          color
          name
        }
      }
      latestReviews(first: 100) {
        nodes {
          id
          body
          state
          author {
            login
          }
          submittedAt
        }
      }
      maintainerCanModify
      mergeCommit {
        oid
      }
      mergeStateStatus
      mergeable
      mergedAt
      mergedBy {
        login
      }
      milestone {
        title
        dueOn
      }
      number
      potentialMergeCommit {
        oid
      }
      projectCards(first: 100) {
        nodes {
          id
          note
        }
      }
      reactionGroups {
        content
        users(first: 100) {
          nodes {
            login
          }
        }
      }
      reviewDecision
      reviewRequests(first: 100) {
        nodes {
          requestedReviewer {
            ... on User {
              id
              login
            }
            ... on Team {
              id
              name
            }
          }
        }
      }
      reviews(first: 100) {
        nodes {
          id
          body
          state
          author {
            login
          }
          submittedAt
        }
      }
      reviewThreads(first: 100) {
        nodes {
          comments(first: 100) {
            nodes {
              id
              body
              createdAt
              author {
                login
              }
            }
          }
        }
      }
      closingIssuesReferences(first: 100) {
        nodes {
          id
          title
          url
        }
      }
      participants(first: 100) {
        nodes {
          id
          login
        }
      }
      state
      statusCheckRollup {
        contexts(first: 100) {
          nodes {
            __typename
            ... on StatusContext {
              id
              context
              state
              targetUrl
              description
            }
            ... on CheckRun {
              id
              name
              conclusion
              status
              detailsUrl
            }
          }
        }
      }
      title
      updatedAt
      url
      timelineItems(first: 250) {
        nodes {
          __typename
          ... on PullRequestCommit {
            commit {
              oid
            }
          }
          ... on LabeledEvent {
            id
            createdAt
            label {
              id
              name
            }
          }
          ... on UnlabeledEvent {
            id
            createdAt
            label {
              id
              name
            }
          }
          ... on AssignedEvent {
            id
            createdAt
            assignee {
              ... on User {
                id
                login
              }
            }
          }
          ... on ClosedEvent {
            id
            createdAt
          }
          ... on ReopenedEvent {
            id
            createdAt
          }
          ... on ReviewRequestedEvent {
            id
            createdAt
            requestedReviewer {
              ... on User {
                id
                login
              }
            }
          }
          ... on ReviewRequestRemovedEvent {
            id
            createdAt
            requestedReviewer {
              ... on User {
                id
                login
              }
            }
          }
          ... on ReviewDismissedEvent {
            id
            createdAt
            review {
              author {
                login
              }
            }
          }
          ... on MergedEvent {
            id
            createdAt
            mergeRefName
          }
          ... on HeadRefDeletedEvent {
            id
            createdAt
          }
          ... on HeadRefRestoredEvent {
            id
            createdAt
          }
          ... on HeadRefForcePushedEvent {
            id
            createdAt
          }
          ... on BaseRefForcePushedEvent {
            id
            createdAt
          }
          ... on ReadyForReviewEvent {
            id
            createdAt
          }
          ... on ConvertToDraftEvent {
            id
            createdAt
          }
          ... on IssueComment {
            id
            createdAt
            body
            author {
              login
            }
          }
          ... on CrossReferencedEvent {
            id
            createdAt
            source {
              ... on PullRequest {
                id
                title
                url
              }
              ... on Issue {
                id
                title
                url
              }
            }
          }
          ... on PullRequestReview {
            id
            createdAt
            body
            author {
              login
            }
          }
        }
      }
    }
  }
}
